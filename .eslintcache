[{"C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\index.js":"1","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\reportWebVitals.js":"2","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\App.js":"3","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\FormularioDeCarga.jsx":"4","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\layout\\modalAddProducto.jsx":"5","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\layout\\Sidebar.jsx":"6","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\Productos.jsx":"7"},{"size":517,"mtime":1614200473947,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1612047541922,"results":"10","hashOfConfig":"9"},{"size":3531,"mtime":1614202154365,"results":"11","hashOfConfig":"9"},{"size":4087,"mtime":1613693140939,"results":"12","hashOfConfig":"9"},{"size":978,"mtime":1614202856007,"results":"13","hashOfConfig":"9"},{"size":424,"mtime":1613402104043,"results":"14","hashOfConfig":"9"},{"size":6821,"mtime":1614454520121,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3rsyc0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\index.js",[],["35","36"],"C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\reportWebVitals.js",[],"C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\App.js",["37","38"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport FormularioDeCarga from './components/FormularioDeCarga.jsx'\r\nimport Producto from './components/Productos.jsx'\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport Route from 'react-router-dom/Route'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Sidebar from './components/layout/Sidebar.jsx';\r\nimport ModalExample from './components/layout/modalAddProducto.jsx';\r\n\r\n\r\nfunction App() {\r\n  //Revisamos que local storage \"productos\" tenga algo\r\n  let productosIniciales = JSON.parse(localStorage.getItem('productos'))\r\n  //Si no hay productosInciales que cree un arreglo vacio y pasa a ser el array incial del useState de abajo\r\n  if (!productosIniciales) {\r\n    productosIniciales = []\r\n  }\r\n\r\n  const [productos, guardarProductos] = useState(productosIniciales)\r\n\r\n  useEffect(() => {\r\n    //Si hay productosInciales\r\n    if (productosIniciales) {\r\n      //Si hay produtos iniciales las colocamos dentro el local storage\r\n      localStorage.setItem('productos', JSON.stringify(productos))\r\n    } else {\r\n      localStorage.setItem('productos', JSON.stringify([]))\r\n    }\r\n  }, [productos, productosIniciales])\r\n\r\n  const crearProducto = producto => {\r\n    guardarProductos([...productos, producto])\r\n  }\r\n\r\n  const eliminarProducto = id => {\r\n    const nuevasProductos = productos.filter(producto => producto.id !== id)\r\n    guardarProductos(nuevasProductos)\r\n  }\r\n\r\n  const editarProducto = id => {\r\n    const nuevasProductos = productos.filter(producto => producto.id !== id)\r\n  }\r\n\r\n  const titulo = productos.length === 0 ? <ModalExample /> : 'Productos'\r\n\r\n  return (\r\n    <Router>\r\n      <Fragment>\r\n        <div className=\"contenedor-app\">\r\n          <Sidebar />\r\n\r\n          <div className=\"seccion-principal\">\r\n            <Route path='/' exact strict render={\r\n              () => {\r\n                return (\r\n                  <h1>Elija si desea cargar un producto o visualizarlos con los botones de arriba</h1>\r\n                )\r\n              }\r\n            } />\r\n\r\n            <Route path='/formulario' exact strict render={\r\n              () => {\r\n                return (\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"column\">\r\n\r\n                        <FormularioDeCarga\r\n                          crearProducto={crearProducto}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>)\r\n              }\r\n            } />\r\n\r\n            <Route path='/productos/' exact strict render={\r\n              () => {\r\n                return (\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"column\">\r\n                        <h2>{titulo}</h2>\r\n                        {productos.map(producto => (\r\n                          <Producto\r\n                            key={producto.id}\r\n                            producto={producto}\r\n                            productos={productos}\r\n                            eliminarProducto={eliminarProducto}\r\n                            crearProducto={crearProducto}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            } />\r\n          </div>\r\n        </div>\r\n\r\n      </Fragment>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\FormularioDeCarga.jsx",[],"C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\layout\\modalAddProducto.jsx",[],"C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\layout\\Sidebar.jsx",["39"],"import React from \"react\";\r\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside className=\"proyectos\">\r\n      <NavLink className=\"nav\" to=\"/formulario\">\r\n        Formulario de Carga de Productos\r\n      </NavLink>\r\n      <NavLink className=\"nav\" to=\"/productos/\">\r\n        Ver Productos\r\n      </NavLink>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\esteb\\Desktop\\Documentos\\EcoAutoParts\\src\\components\\Productos.jsx",["40","41"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// paso 1 importamos los modales\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\nconst Producto = ({ producto, eliminarProducto, productos, crearProducto }) => {\r\n  const [data, setData] = useState(productos); //2 a nuestro const data le asingamos le valor productos\r\n  const [modalEditar, setModalEditar] = useState(false); // 6Control de cuando se abre y cuando se cierra modal\r\n  const [modalEliminar, setModalEliminar] = useState(false); //6 Control de cuando se abre y cuando se cierra modal\r\n  //7 estado para controlar que pais esta seleccinado\r\n  const [productoSeleccionado, setProductoSeleccinado] = useState({\r\n    nombreProducto: \"\",\r\n    fecha: new Date().toLocaleDateString(),\r\n    descripcion: \"\",\r\n    imagen: \"\",\r\n  });\r\n\r\n  //8 controlar que producto esta seleccinado y ver si editarlo o eliminarlo(caso sirve para saber si se trata de editar o eliminar varia para saber que modal se tiene que abrir)\r\n  const seleccionarProducto = (elemento, caso) => {\r\n    setProductoSeleccinado(elemento);\r\n    caso === \"Editar\" ? setModalEditar(true) : setModalEliminar(true);\r\n  };\r\n  //11 captura lo que el usuario esta escribiendo el usuario en cada uno de los inputs\r\n  const handleChange = (e) => {\r\n    //11 asigna al state lo que el usuario esta escribiendo en base al NAME del INPUT\r\n    const { name, value } = e.target;\r\n    setProductoSeleccinado((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // console.log(productoSeleccionado)\r\n\r\n  const editar = () => {\r\n    //12 asigna toda la data para poderla modificar\r\n    /*\r\n    1. guardar id objeto\r\n    2. crear nuevo objeto con los nuevos datos sin el id\r\n    3. agregarle el id guardado \r\n    4. Buscar en la lista de productos el objeto anterior y borrarlo\r\n    5. Agregar objeto actualizado\r\n    */\r\n    var dataNueva = data;\r\n    dataNueva.map((producto) => {\r\n      if (producto.id === productoSeleccionado.id) {\r\n        producto.nombreProducto = productoSeleccionado.nombreProducto;\r\n        producto.descripcion = productoSeleccionado.descripcion;\r\n      }\r\n      console.log(producto);\r\n    });\r\n    // console.log(producto);\r\n    crearProducto(dataNueva);\r\n    setModalEditar(false);\r\n  };\r\n\r\n  //3 creamos tabla para mostrarle al usuario los productos\r\n  //4 recorremos el array de prodctos con la funcion map que esta en App.js\r\n  return (\r\n    <div className=\"producto\">\r\n      <table className=\"table table-boardered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Imagen</th>\r\n            <th>Nombre Producto</th>\r\n            <th>Fecha</th>\r\n            <th>Descripcion</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th>\r\n              {\" \"}\r\n              <img src={producto.imagen} alt=\"\" width=\"150px\" />\r\n            </th>\r\n            <th className=\"stilo2\">{producto.nombreProducto}</th>\r\n            <th>{producto.fecha}</th>\r\n            <th className=\"stilo2\">{producto.descripcion}</th>\r\n            <td>\r\n              {/* //5 creamos dos botones uno para eliminar y el otro para editar */}\r\n              {/* //9 llamamos la funcion seleccionarProducto en el boton editar*/}\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => seleccionarProducto(producto, \"Editar\")}\r\n              >\r\n                Editar\r\n              </button>\r\n              {\"   \"}\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => seleccionarProducto(producto, \"Eliminar\")}\r\n              >\r\n                X\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {/* //Modal permanece cerrado hasta que se lo indiquemos */}\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader>\r\n          <div>\r\n            <h3>Editar Producto</h3>\r\n          </div>\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>Nombre Producto</label>\r\n\r\n            {/* <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              name=\"imagen\"\r\n              onChange={handleChange}\r\n              value={producto.imagen && productoSeleccionado.imagen}\r\n            /> */}\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombreProducto\"\r\n              //10 asignamos valor a los inputs de acuedo al producto seleccionado\r\n              value={\r\n                producto.nombreProducto && productoSeleccionado.nombreProducto\r\n              }\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Fecha</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"text\"\r\n              name=\"fecha\"\r\n              value={producto.fecha && productoSeleccionado.fecha}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Descripcion</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"descripcion\"\r\n              value={producto.descripcion && productoSeleccionado.descripcion}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        {/* ---------------------MODAL EDITAR-------------------------- */}\r\n        <Modal isOpen={modalEliminar}></Modal>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => editar()}>\r\n            {\" \"}\r\n            Actualizar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalEditar(false)}\r\n          >\r\n            {\" \"}\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {/* ---------------------MODAL ELIMINAR-------------------------- */}\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás Seguro que deseas eliminar el producto{\" \"}\r\n          {productoSeleccionado && productoSeleccionado.nombreProducto}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => eliminarProducto(producto.id)}\r\n          >\r\n            Sí\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setModalEliminar(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nProducto.propTypes = {\r\n  producto: PropTypes.object.isRequired,\r\n  eliminarproducto: PropTypes.func.isRequired,\r\n};\r\nexport default Producto;\r\n",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":40,"column":9,"nodeType":"50","messageId":"51","endLine":40,"endColumn":23},{"ruleId":"48","severity":1,"message":"52","line":41,"column":11,"nodeType":"50","messageId":"51","endLine":41,"endColumn":26},{"ruleId":"48","severity":1,"message":"53","line":2,"column":27,"nodeType":"50","messageId":"51","endLine":2,"endColumn":33},{"ruleId":"48","severity":1,"message":"54","line":7,"column":16,"nodeType":"50","messageId":"51","endLine":7,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":45,"column":30,"nodeType":"57","messageId":"58","endLine":45,"endColumn":32},{"ruleId":"44","replacedBy":"59"},{"ruleId":"46","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'editarProducto' is assigned a value but never used.","Identifier","unusedVar","'nuevasProductos' is assigned a value but never used.","'Router' is defined but never used.","'setData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["61"],["62"],"no-global-assign","no-unsafe-negation"]